#[derive(Debug, Clone, PartialOrd, PartialEq)]

pub struct GRange {
    pub id: String,
    pub name: String,
    pub genetype: String,
    pub start: String,
    pub end: String,
    pub index: String,
    pub strand: String,
    pub indexend: String,
    pub collectable: Vec<String>,
}

#[derive(Debug, Clone, PartialOrd, PartialEq)]

pub struct GenomeanalyzerOlder {
    pub chrom: String,
    pub start: String,
    pub stop: String,
    pub generef: String,
    pub alt: String,
    pub priortranscript: String,
    pub hgvsp: String,
    pub hgvpc: String,
    pub cannonical: String,
    pub othertranscript: String,
    pub genotype: String,
    pub gene: String,
    pub phenotype: String,
    pub medgencui: String,
    pub inheritance: String,
    pub finalclass: String,
    pub score_pathogen: String,
    pub flag: String,
    pub note: String,
    pub pvs1: String,
    pub ps1: String,
    pub ps2: String,
    pub ps3: String,
    pub ps4: String,
    pub pm1: String,
    pub pm2: String,
    pub pm3: String,
    pub pm4: String,
    pub pm5: String,
    pub pm6: String,
    pub pp1: String,
    pub pp2: String,
    pub pp3: String,
    pub pp4: String,
    pub pp5: String,
    pub ba1: String,
    pub bs1: String,
    pub bs2: String,
    pub bs3: String,
    pub bs4: String,
    pub bp1: String,
    pub bp2: String,
    pub bp3: String,
    pub bp4: String,
    pub bp5: String,
    pub bp6: String,
    pub bp7: String,
    pub bp8: String,
}

#[derive(Debug, Clone, PartialOrd, PartialEq)]

pub struct Genomeanalyzer {
    pub chrom: String,
    pub start: String,
    pub stop: String,
    pub generef: String,
    pub alt: String,
    pub priortranscript: String,
    pub hgvsp: String,
    pub hgvpc: String,
    pub cannonical: String,
    pub othertranscript: String,
    pub genotype: String,
    pub gene: String,
    pub phenotype: String,
    pub medgencui: String,
    pub inheritance: String,
    pub finalclass: String,
    pub score_pathogen: String,
    pub flag: String,
    pub note: String,
    pub vcforig: String,
    pub pvs1: String,
    pub ps1: String,
    pub ps2: String,
    pub ps3: String,
    pub ps4: String,
    pub pm1: String,
    pub pm2: String,
    pub pm3: String,
    pub pm4: String,
    pub pm5: String,
    pub pm6: String,
    pub pp1: String,
    pub pp2: String,
    pub pp3: String,
    pub pp4: String,
    pub pp5: String,
    pub ba1: String,
    pub bs1: String,
    pub bs2: String,
    pub bs3: String,
    pub bs4: String,
    pub bp1: String,
    pub bp2: String,
    pub bp3: String,
    pub bp4: String,
    pub bp5: String,
    pub bp6: String,
    pub bp7: String,
    pub bp8: String,
}

#[derive(Debug, Clone, PartialOrd, PartialEq)]
pub struct GenomeanalyzerFinal {
    pub version: String,
    pub sample: String,
    pub chrom: String,
    pub start: String,
    pub stop: String,
    pub generef: String,
    pub alt: String,
    pub priortranscript: String,
    pub hgvsp: String,
    pub hgvpc: String,
    pub cannonical: String,
    pub othertranscript: String,
    pub genotype: String,
    pub gene: String,
    pub phenotype: String,
    pub medgencui: String,
    pub inheritance: String,
    pub finalclass: String,
    pub score_pathogen: String,
    pub flag: String,
    pub note: String,
    pub vcforig: String,
    pub pvs1: String,
    pub ps1: String,
    pub ps2: String,
    pub ps3: String,
    pub ps4: String,
    pub pm1: String,
    pub pm2: String,
    pub pm3: String,
    pub pm4: String,
    pub pm5: String,
    pub pm6: String,
    pub pp1: String,
    pub pp2: String,
    pub pp3: String,
    pub pp4: String,
    pub pp5: String,
    pub ba1: String,
    pub bs1: String,
    pub bs2: String,
    pub bs3: String,
    pub bs4: String,
    pub bp1: String,
    pub bp2: String,
    pub bp3: String,
    pub bp4: String,
    pub bp5: String,
    pub bp6: String,
    pub bp7: String,
    pub bp8: String,
}

#[derive(Debug, Clone, PartialOrd, PartialEq)]
pub struct GenomeanalyzerOlderFinal {
    pub version: String,
    pub sample: String,
    pub chrom: String,
    pub start: String,
    pub stop: String,
    pub generef: String,
    pub alt: String,
    pub priortranscript: String,
    pub hgvsp: String,
    pub hgvpc: String,
    pub cannonical: String,
    pub othertranscript: String,
    pub genotype: String,
    pub gene: String,
    pub phenotype: String,
    pub medgencui: String,
    pub inheritance: String,
    pub finalclass: String,
    pub score_pathogen: String,
    pub flag: String,
    pub note: String,
    pub pvs1: String,
    pub ps1: String,
    pub ps2: String,
    pub ps3: String,
    pub ps4: String,
    pub pm1: String,
    pub pm2: String,
    pub pm3: String,
    pub pm4: String,
    pub pm5: String,
    pub pm6: String,
    pub pp1: String,
    pub pp2: String,
    pub pp3: String,
    pub pp4: String,
    pub pp5: String,
    pub ba1: String,
    pub bs1: String,
    pub bs2: String,
    pub bs3: String,
    pub bs4: String,
    pub bp1: String,
    pub bp2: String,
    pub bp3: String,
    pub bp4: String,
    pub bp5: String,
    pub bp6: String,
    pub bp7: String,
    pub bp8: String,
}
#[derive(Debug, Clone, PartialEq, PartialOrd)]

pub struct Genomecapture {
    pub chr: String,
    pub start: String,
    pub end: String,
    pub generef: String,
    pub alt: String,
    pub effect: String,
    pub gene: String,
    pub transcript: String,
    pub selectcannonical: String,
    pub tfbsid: String,
    pub tfbsname: String,
    pub exonintronnum: String,
    pub hgvsc: String,
    pub hgvsp: String,
    pub cdsdistance: String,
    pub cdslen: String,
    pub aalen: String,
    pub othertranscripts: String,
    pub exac_an: String,
    pub exac_ac: String,
    pub exac_af: String,
    pub exac_istarget: String,
    pub dnsnp: String,
    pub dnsnp_version: String,
    pub dbsnp_1tgp_ref_freq: String,
    pub dbsnp_1tgp_alt_freq: String,
    pub common_1tgp_1perc: String,
    pub esp6500siv2_ea_freq: String,
    pub esp6500siv2_aa_freq: String,
    pub esp6500siv2_all_freq: String,
    pub gnomad_af_all: String,
    pub gnomad_hom_all: String,
    pub gnomad_af_max_pop: String,
    pub cadd_score: String,
    pub dbscsnv_ab_score: String,
    pub dbscsnv_rf_score: String,
    pub papi_pred: String,
    pub papi_score: String,
    pub polyphen_2_pred: String,
    pub polyphen_2_score: String,
    pub sift_pred: String,
    pub sift_score: String,
    pub pseeac_rf_pred: String,
    pub pseeac_rf_score: String,
    pub clinvar_hotspot: String,
    pub clinvar_rcv: String,
    pub clinvar_clinical_significance: String,
    pub clinvar_rev_status: String,
    pub clinical_trials: String,
    pub clinvar_traitsclinvar_pmids: String,
    pub diseases: String,
    pub disease_ids: String,
    pub aml_0156_dna131_geno: String,
    pub aml_0156_dna131_qual: String,
    pub aml_0156_dna131_geno_qual: String,
    pub aml_0156_dna131_filter: String,
    pub aml_0156_dna131_af: String,
    pub aml_0156_dna131_ao: String,
    pub aml_0156_dna131_ro: String,
    pub aml_0156_dna131_co: String,
}

#[derive(Debug, Clone, PartialOrd, PartialEq)]

pub struct VariantCombine {
    pub chrom: String,
    pub start: String,
    pub stop: String,
    pub generef: String,
    pub alt: String,
    pub priortranscript: String,
    pub hgvpc: String,
    pub cannonical: String,
    pub othertranscript: String,
    pub genotype: String,
    pub phenotype: String,
    pub medgencui: String,
    pub inheritance: String,
    pub finalclass: String,
    pub score_pathogen: String,
    pub flag: String,
    pub note: String,
    pub vcforig: String,
    pub pvs1: String,
    pub ps1: String,
    pub ps2: String,
    pub ps3: String,
    pub ps4: String,
    pub pm1: String,
    pub pm2: String,
    pub pm3: String,
    pub pm4: String,
    pub pm5: String,
    pub pm6: String,
    pub pp1: String,
    pub pp2: String,
    pub pp3: String,
    pub pp4: String,
    pub pp5: String,
    pub ba1: String,
    pub bs1: String,
    pub bs2: String,
    pub bs3: String,
    pub bs4: String,
    pub bp1: String,
    pub bp2: String,
    pub bp3: String,
    pub bp4: String,
    pub bp5: String,
    pub bp6: String,
    pub bp7: String,
    pub bp8: String,
    pub effect: String,
    pub transcript: String,
    pub selectcannonical: String,
    pub tfbsid: String,
    pub tfbsname: String,
    pub exonintronnum: String,
    pub hgvsc: String,
    pub cdsdistance: String,
    pub cdslen: String,
    pub aalen: String,
    pub othertranscripts: String,
    pub exac_an: String,
    pub exac_ac: String,
    pub exac_af: String,
    pub exac_istarget: String,
    pub dnsnp: String,
    pub dnsnp_version: String,
    pub dbsnp_1tgp_ref_freq: String,
    pub dbsnp_1tgp_alt_freq: String,
    pub common_1tgp_1perc: String,
    pub esp6500siv2_ea_freq: String,
    pub esp6500siv2_aa_freq: String,
    pub esp6500siv2_all_freq: String,
    pub gnomad_af_all: String,
    pub gnomad_hom_all: String,
    pub gnomad_af_max_pop: String,
    pub cadd_score: String,
    pub dbscsnv_ab_score: String,
    pub dbscsnv_rf_score: String,
    pub papi_pred: String,
    pub papi_score: String,
    pub polyphen_2_pred: String,
    pub polyphen_2_score: String,
    pub sift_pred: String,
    pub sift_score: String,
    pub pseeac_rf_pred: String,
    pub pseeac_rf_score: String,
    pub clinvar_hotspot: String,
    pub clinvar_rcv: String,
    pub clinvar_clinical_significance: String,
    pub clinvar_rev_status: String,
    pub clinical_trials: String,
    pub clinvar_traitsclinvar_pmids: String,
    pub diseases: String,
    pub disease_ids: String,
    pub aml_0156_dna131_geno: String,
    pub aml_0156_dna131_qual: String,
    pub aml_0156_dna131_geno_qual: String,
    pub aml_0156_dna131_filter: String,
    pub aml_0156_dna131_af: String,
    pub aml_0156_dna131_ao: String,
    pub aml_0156_dna131_ro: String,
    pub aml_0156_dna131_co: String,
}

#[derive(Debug, Clone, PartialOrd, PartialEq)]

pub struct GeneMapper {
    pub gene: String,
    pub start: usize,
    pub end: usize,
}

#[derive(Debug, Clone, PartialOrd, PartialEq)]

pub struct ExonCollate {
    pub name: String,
    pub start: usize,
    pub end: usize,
    pub exoncapture: Vec<(String, usize, usize)>,
}

#[derive(Debug, Clone, PartialOrd, PartialEq)]
pub struct Fasta {
    pub header: String,
    pub sequence: String,
}

#[derive(Debug, Clone, PartialOrd, PartialEq)]
pub struct PriorTranscript {
    pub prior: String,
    pub alternate: Vec<String>,
}

#[derive(Debug, Clone, PartialOrd, PartialEq)]
pub struct TranscriptExtract {
    pub refallele: String,
    pub altallele: String,
    pub start: String,
    pub end: String,
    pub prior: String,
    pub alternate: Vec<String>,
}

#[derive(Debug, Clone, PartialOrd, PartialEq)]
pub struct FastaUpdown {
    pub header: String,
    pub sequence: String,
    pub upstream: String,
    pub downstream: String,
}

#[derive(Debug, Clone, PartialOrd, PartialEq)]

pub struct Transcript {
    pub variant: String,
    pub alt_allele: String,
    pub start: usize,
    pub end: usize,
    pub id: Vec<String>,
    pub additional: String,
}

#[derive(Debug, Clone, PartialOrd, PartialEq)]
pub struct TranscriptEval {
    pub transcript: String,
    pub start: usize,
    pub end: usize,
}

#[derive(Debug, Clone, PartialOrd, PartialEq)]
pub struct VariantAccumulate {
    pub refallele: String,
    pub altallele: String,
    pub effect: String,
    pub gene: String,
}
